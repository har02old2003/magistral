name: Build and deploy PHP app to Azure Web App - magistralfarma

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_75670E573F054746B7A89CE8791ED52B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C382058224A2481D87822E781558A335 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C1E264457D5242F2B5FA4A43CFF5FABB }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'magistralfarma'
          slot-name: 'Production'
          package: .
          # Eliminamos el startup-command de aquí, ya que no es el lugar correcto para los comandos Artisan.
          # startup-command: |
          #   php artisan optimize:clear
          #   php artisan migrate --force
          #   php artisan storage:link
          #   php artisan config:cache
          #   php artisan route:cache
          #   php artisan view:cache
          #   # php artisan db:seed # Descomenta si necesitas ejecutar seeders

      # --- NUEVO PASO AÑADIDO PARA EJECUTAR COMANDOS LARAVEL VIA AZURE CLI ---
      - name: Run Laravel Post-Deployment Commands via Azure CLI
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp ssh run --resource-group "databaseywebsite" --name "magistralfarma" --web-app-path "/home/site/wwwroot" --command "php artisan optimize:clear && php artisan migrate --force && php artisan storage:link && php artisan config:cache && php artisan route:cache && php artisan view:cache"
            # Si necesitas ejecutar seeders, descomenta la siguiente línea:
            # az webapp ssh run --resource-group "databaseywebsite" --name "magistralfarma" --web-app-path "/home/site/wwwroot" --command "php artisan db:seed"

